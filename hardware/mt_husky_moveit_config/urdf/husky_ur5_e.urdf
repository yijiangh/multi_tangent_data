<?xml version="1.0" encoding="utf-8" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /opt/ros/melodic/share/husky_description/urdf/husky.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!--
Software License Agreement (BSD)

\file      husky.urdf.xacro
\authors   Paul Bovbel <pbovbel@clearpathrobotics.com>, Devon Ash <dash@clearpathrobotics.com>
\copyright Copyright (c) 2015, Clearpath Robotics, Inc., All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that
the following conditions are met:
 * Redistributions of source code must retain the above copyright notice, this list of conditions and the
   following disclaimer.
 * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
   following disclaimer in the documentation and/or other materials provided with the distribution.
 * Neither the name of Clearpath Robotics nor the names of its contributors may be used to endorse or promote
   products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WAR-
RANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, IN-
DIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->
<robot name="husky">
    <material name="dark_grey">
        <color rgba="0.2 0.2 0.2 1.0" />
    </material>
    <material name="medium_grey">
        <color rgba="0.6 0.6 0.6 1.0" />
    </material>
    <material name="light_grey">
        <color rgba="0.8 0.8 0.8 1.0" />
    </material>
    <material name="yellow">
        <color rgba="0.8 0.8 0.0 1.0" />
    </material>
    <material name="black">
        <color rgba="0.15 0.15 0.15 1.0" />
    </material>
    <material name="white">
        <color rgba="1.0 1.0 1.0 1.0" />
    </material>
    <material name="red">
        <color rgba="1.0 0.0 0.0 1.0" />
    </material>

    <!-- fictitious joints to model base movement -->
    <link name="world_link"/>
    <link name="base_link_0"/>
    <link name="base_link_1"/>
    <joint name="x" type="prismatic">
      <limit lower="-5" upper="5" effort="1000.0" velocity="1.0"/>
      <parent link="world_link"/>
      <child link="base_link_0"/>
      <axis xyz="1 0 0"/>
    </joint>
    <joint name="y" type="prismatic">
      <limit lower="-5" upper="5" effort="1000.0" velocity="1.0"/>
      <parent link="base_link_0"/>
      <child link="base_link_1"/>
      <axis xyz="0 1 0"/>
    </joint>
    <joint name="theta" type="continuous">
      <limit effort="1000.0" velocity="1.5708"/>
      <parent link="base_link_1"/>
      <child link="base_footprint"/>
      <axis xyz="0 0 1"/>
    </joint>

    <!-- Base link is the center of the robot's bottom plate -->
    <link name="base_link">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://husky_description/meshes/base_link.stl" />
            </geometry>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0.0 0 0.061875" />
            <geometry>
                <box size="0.9874 0.5709 0.12375" />
            </geometry>
        </collision>
<!-- 
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0.175625" />
            <geometry>
                <box size="0.78992 0.5709 0.10375" />
            </geometry>
        </collision>
         -->
<inertial>
            <mass value="0.1" />
            <inertia ixx="0.03" iyy="0.03" izz="0.03" ixy="0.0" ixz="0.0" iyz="0.0" />
        </inertial>

    </link>
    <!-- Base footprint is on the ground under the robot -->
    <link name="base_footprint" />
    <joint name="base_footprint_joint" type="fixed">
        <origin rpy="0 0 0" xyz="0 0 0.13228" />
        <parent link="base_footprint" />
        <child link="base_link" />
    </joint>
    <!-- Inertial link stores the robot's inertial information -->
    <link name="inertial_link">
        
<inertial>
            <mass value="46.034" />
            <origin xyz="-0.00065 -0.085 0.062" />
            <inertia ixx="0.6022" ixy="-0.02364" ixz="-0.1197" iyy="1.7386" iyz="-0.001544" izz="2.0296" />
        </inertial>

    </link>
    <joint name="inertial_joint" type="fixed">
        <origin rpy="0 0 0" xyz="0 0 0" />
        <parent link="base_link" />
        <child link="inertial_link" />
    </joint>
    <!-- IMU Link is the standard mounting position for the UM6 IMU.-->
    <!-- Can be modified with environment variables in /etc/ros/setup.bash -->
    <link name="imu_link" />
    <joint name="imu_joint" type="fixed">
        <origin rpy="0 -1.5708 3.1416" xyz="0.19 0 0.149" />
        <parent link="base_link" />
        <child link="imu_link" />
    </joint>
    <gazebo reference="imu_link" />
    <link name="front_left_wheel_link">
        
<inertial>
            <mass value="2.637" />
            <origin xyz="0 0 0" />
            <inertia ixx="0.02467" ixy="0" ixz="0" iyy="0.04411" iyz="0" izz="0.02467" />
        </inertial>

        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://husky_description/meshes/wheel.obj" />
            </geometry>
        </visual>
        <collision>
            <origin rpy="1.570795 0 0" xyz="0 0 0" />
            <geometry>
                <cylinder length="0.1143" radius="0.1651" />
            </geometry>
        </collision>
    </link>
    <gazebo reference="front_left_wheel_link">
        <mu1 value="1.0" />
        <mu2 value="1.0" />
        <kp value="10000000.0" />
        <kd value="1.0" />
        <fdir1 value="1 0 0" />
    </gazebo>
    <joint name="front_left_wheel" type="continuous">
        <parent link="base_link" />
        <child link="front_left_wheel_link" />
        <origin rpy="0 0 0" xyz="0.256 0.2854 0.03282" />
        <axis rpy="0 0 0" xyz="0 1 0" />
    </joint>
    <transmission name="front_left_wheel_trans" type="SimpleTransmission">
        <type>transmission_interface/SimpleTransmission</type>
        <actuator name="front_left_wheel_motor">
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
        <joint name="front_left_wheel">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
    </transmission>
    <link name="front_right_wheel_link">
        
<inertial>
            <mass value="2.637" />
            <origin xyz="0 0 0" />
            <inertia ixx="0.02467" ixy="0" ixz="0" iyy="0.04411" iyz="0" izz="0.02467" />
        </inertial>

        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://husky_description/meshes/wheel.obj" />
            </geometry>
        </visual>
        <collision>
            <origin rpy="1.570795 0 0" xyz="0 0 0" />
            <geometry>
                <cylinder length="0.1143" radius="0.1651" />
            </geometry>
        </collision>
    </link>
    <gazebo reference="front_right_wheel_link">
        <mu1 value="1.0" />
        <mu2 value="1.0" />
        <kp value="10000000.0" />
        <kd value="1.0" />
        <fdir1 value="1 0 0" />
    </gazebo>
    <joint name="front_right_wheel" type="continuous">
        <parent link="base_link" />
        <child link="front_right_wheel_link" />
        <origin rpy="0 0 0" xyz="0.256 -0.2854 0.03282" />
        <axis rpy="0 0 0" xyz="0 1 0" />
    </joint>
    <transmission name="front_right_wheel_trans" type="SimpleTransmission">
        <type>transmission_interface/SimpleTransmission</type>
        <actuator name="front_right_wheel_motor">
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
        <joint name="front_right_wheel">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
    </transmission>
    <link name="rear_left_wheel_link">
        
<inertial>
            <mass value="2.637" />
            <origin xyz="0 0 0" />
            <inertia ixx="0.02467" ixy="0" ixz="0" iyy="0.04411" iyz="0" izz="0.02467" />
        </inertial>

        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://husky_description/meshes/wheel.obj" />
            </geometry>
        </visual>
        <collision>
            <origin rpy="1.570795 0 0" xyz="0 0 0" />
            <geometry>
                <cylinder length="0.1143" radius="0.1651" />
            </geometry>
        </collision>
    </link>
    <gazebo reference="rear_left_wheel_link">
        <mu1 value="1.0" />
        <mu2 value="1.0" />
        <kp value="10000000.0" />
        <kd value="1.0" />
        <fdir1 value="1 0 0" />
    </gazebo>
    <joint name="rear_left_wheel" type="continuous">
        <parent link="base_link" />
        <child link="rear_left_wheel_link" />
        <origin rpy="0 0 0" xyz="-0.256 0.2854 0.03282" />
        <axis rpy="0 0 0" xyz="0 1 0" />
    </joint>
    <transmission name="rear_left_wheel_trans" type="SimpleTransmission">
        <type>transmission_interface/SimpleTransmission</type>
        <actuator name="rear_left_wheel_motor">
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
        <joint name="rear_left_wheel">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
    </transmission>
    <link name="rear_right_wheel_link">
        
<inertial>
            <mass value="2.637" />
            <origin xyz="0 0 0" />
            <inertia ixx="0.02467" ixy="0" ixz="0" iyy="0.04411" iyz="0" izz="0.02467" />
        </inertial>

        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://husky_description/meshes/wheel.obj" />
            </geometry>
        </visual>
        <collision>
            <origin rpy="1.570795 0 0" xyz="0 0 0" />
            <geometry>
                <cylinder length="0.1143" radius="0.1651" />
            </geometry>
        </collision>
    </link>
    <gazebo reference="rear_right_wheel_link">
        <mu1 value="1.0" />
        <mu2 value="1.0" />
        <kp value="10000000.0" />
        <kd value="1.0" />
        <fdir1 value="1 0 0" />
    </gazebo>
    <joint name="rear_right_wheel" type="continuous">
        <parent link="base_link" />
        <child link="rear_right_wheel_link" />
        <origin rpy="0 0 0" xyz="-0.256 -0.2854 0.03282" />
        <axis rpy="0 0 0" xyz="0 1 0" />
    </joint>
    <transmission name="rear_right_wheel_trans" type="SimpleTransmission">
        <type>transmission_interface/SimpleTransmission</type>
        <actuator name="rear_right_wheel_motor">
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
        <joint name="rear_right_wheel">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
    </transmission>
    <!-- Spawn Husky chassis -->
    <link name="top_chassis_link">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://husky_description/meshes/top_chassis.obj" />
            </geometry>
        </visual>
    </link>
    <!-- Attach chassis to the robot -->
    <joint name="top_chassis_joint" type="fixed">
        <parent link="base_link" />
        <child link="top_chassis_link" />
    </joint>
    <link name="front_bumper_link">
        <visual>
            <geometry>
                <mesh filename="package://husky_description/meshes/bumper.obj" />
            </geometry>
        </visual>
    </link>
    <!-- Attach front bumper -->
    <joint name="front_bumper" type="fixed">
        <origin rpy="0 0 0" xyz="0.48 0 0.091" />
        <parent link="base_link" />
        <child link="front_bumper_link" />
    </joint>
    <link name="rear_bumper_link">
        <visual>
            <geometry>
                <mesh filename="package://husky_description/meshes/bumper.obj" />
            </geometry>
        </visual>
    </link>
    <!-- Attach rear bumper -->
    <joint name="rear_bumper" type="fixed">
        <origin rpy="0 0 3.14159" xyz="-0.48 0 0.091" />
        <parent link="base_link" />
        <child link="rear_bumper_link" />
    </joint>
    <link name="top_plate_link">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://husky_description/meshes/large_top_plate.obj" />
            </geometry>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://husky_description/meshes/large_top_plate_collision.stl" />
            </geometry>
        </collision>
        
<inertial>
            <mass value="0.1" />
            <inertia ixx="0.03" iyy="0.03" izz="0.03" ixy="0.0" ixz="0.0" iyz="0.0" />
        </inertial>

    </link>
    <!-- Attach top plate -->
    <joint name="top_plate_joint" type="fixed">
        <parent link="base_link" />
        <child link="top_plate_link" />
        <origin rpy="0 0 0" xyz="0.0812 0 0.225" />
    </joint>
    <!-- Top plate front link -->
    <joint name="top_plate_front_joint" type="fixed">
        <parent link="top_plate_link" />
        <child link="top_plate_front_link" />
        <origin rpy="0 0 0" xyz="0.4125 0 0.00672" />
    </joint>
    <!-- Top plate rear link-->
    <joint name="top_plate_rear_joint" type="fixed">
        <parent link="top_plate_link" />
        <child link="top_plate_rear_link" />
        <origin rpy="0 0 0" xyz="-0.4125 0 0.00672" />
    </joint>
    <link name="top_plate_front_link" />
    <link name="top_plate_rear_link" />
    <gazebo>
        <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
            <robotNamespace>/</robotNamespace>
            <legacyModeNS>true</legacyModeNS>
        </plugin>
    </gazebo>
    <gazebo>
        <plugin filename="libhector_gazebo_ros_imu.so" name="imu_controller">
            <robotNamespace>/</robotNamespace>
            <updateRate>50.0</updateRate>
            <bodyName>base_link</bodyName>
            <topicName>imu/data</topicName>
            <accelDrift>0.005 0.005 0.005</accelDrift>
            <accelGaussianNoise>0.005 0.005 0.005</accelGaussianNoise>
            <rateDrift>0.005 0.005 0.005</rateDrift>
            <rateGaussianNoise>0.005 0.005 0.005</rateGaussianNoise>
            <headingDrift>0.005</headingDrift>
            <headingGaussianNoise>0.005</headingGaussianNoise>
        </plugin>
    </gazebo>
    <gazebo>
        <plugin filename="libhector_gazebo_ros_gps.so" name="gps_controller">
            <robotNamespace>/</robotNamespace>
            <updateRate>40</updateRate>
            <bodyName>base_link</bodyName>
            <frameId>base_link</frameId>
            <topicName>navsat/fix</topicName>
            <velocityTopicName>navsat/vel</velocityTopicName>
            <referenceLatitude>49.9</referenceLatitude>
            <referenceLongitude>8.9</referenceLongitude>
            <referenceHeading>0</referenceHeading>
            <referenceAltitude>0</referenceAltitude>
            <drift>0.0001 0.0001 0.0001</drift>
        </plugin>
    </gazebo>
    <joint name="arm_mount_joint" type="fixed">
        <parent link="top_plate_front_link" />
        <child link="ur_arm_base_link" />
        <origin rpy="0 0 3.1415927" xyz="-0.105 0.0 0.0" />
    </joint>
    <!--
    Base UR robot series xacro macro.

    NOTE: this is NOT a URDF. It cannot directly be loaded by consumers
    expecting a flattened '.urdf' file. See the top-level '.xacro' for that
    (but note: that .xacro must still be processed by the xacro command).

    For use in '.launch' files: use one of the 'load_urX.launch' convenience
    launch files.

    This file models the base kinematic chain of a UR robot, which then gets
    parameterised by various configuration files to convert it into a UR3(e),
    UR5(e), UR10(e) or UR16e.

    NOTE: the default kinematic parameters (ie: link lengths, frame locations,
    offets, etc) do not correspond to any particular robot. They are defaults
    only. There WILL be non-zero offsets between the Forward Kinematics results
    in TF (ie: robot_state_publisher) and the values reported by the Teach
    Pendant.

    For accurate (and robot-specific) transforms, the 'kinematics_parameters_file'
    parameter MUST point to a .yaml file containing the appropriate values for
    the targetted robot.

    If using the UniversalRobots/Universal_Robots_ROS_Driver, follow the steps
    described in the readme of that repository to extract the kinematic
    calibration from the controller and generate the required .yaml file.

    Main author of the migration to yaml configs: Ludovic Delval.

    Contributors to previous versions (in no particular order):

     - Felix Messmer
     - Kelsey Hawkins
     - Wim Meeussen
     - Shaun Edwards
     - Nadia Hammoudeh Garcia
     - Dave Hershberger
     - G. vd. Hoorn
     - Philip Long
     - Dave Coleman
     - Miguel Prada
     - Mathias Luedtke
     - Marcel Schnirring
     - Felix von Drigalski
     - Felix Exner
     - Jimmy Da Silva
     - Ajit Krisshna N L
     - Muhammad Asif Rana
  -->
    <!--
    NOTE: the macro defined in this file is NOT part of the public API of this
          package. Users CANNOT rely on this file being available, or stored in
          this location. Nor can they rely on the existence of the macro.
  -->
    <transmission name="ur_arm_shoulder_pan_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="ur_arm_shoulder_pan_joint">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="ur_arm_shoulder_pan_motor">
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <transmission name="ur_arm_shoulder_lift_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="ur_arm_shoulder_lift_joint">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="ur_arm_shoulder_lift_motor">
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <transmission name="ur_arm_elbow_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="ur_arm_elbow_joint">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="ur_arm_elbow_motor">
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <transmission name="ur_arm_wrist_1_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="ur_arm_wrist_1_joint">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="ur_arm_wrist_1_motor">
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <transmission name="ur_arm_wrist_2_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="ur_arm_wrist_2_joint">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="ur_arm_wrist_2_motor">
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <transmission name="ur_arm_wrist_3_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="ur_arm_wrist_3_joint">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="ur_arm_wrist_3_motor">
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <!-- links: main serial chain -->
    <link name="ur_arm_base_link" />
    <link name="ur_arm_base_link_inertia">
        <visual>
            <origin rpy="0 0 3.14159265359" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5e/visual/base.obj" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="0 0 3.14159265359" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5e/collision/base.stl" />
            </geometry>
        </collision>
        
<inertial>
            <mass value="4.0" />
            <origin rpy="0 0 0" xyz="0 0 0" />
            <inertia ixx="0.00443333156" ixy="0.0" ixz="0.0" iyy="0.00443333156" iyz="0.0" izz="0.0072" />
        </inertial>

    </link>
    <link name="ur_arm_shoulder_link">
        <visual>
            <origin rpy="0 0 3.14159265359" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5e/visual/shoulder.obj" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="0 0 3.14159265359" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5e/collision/shoulder.stl" />
            </geometry>
        </collision>
        
<inertial>
            <mass value="3.7" />
            <origin rpy="0 0 0" xyz="0 0 0" />
            <inertia ixx="0.010267495893" ixy="0.0" ixz="0.0" iyy="0.010267495893" iyz="0.0" izz="0.00666" />
        </inertial>

    </link>
    <link name="ur_arm_upper_arm_link">
        <visual>
            <origin rpy="1.57079632679 0 -1.57079632679" xyz="0 0 0.138" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5e/visual/upperarm.obj" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="1.57079632679 0 -1.57079632679" xyz="0 0 0.138" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5e/collision/upperarm.stl" />
            </geometry>
        </collision>
        
<inertial>
            <mass value="8.393" />
            <origin rpy="0 1.57079632679 0" xyz="-0.2125 0.0 0.138" />
            <inertia ixx="0.133885781862" ixy="0.0" ixz="0.0" iyy="0.133885781862" iyz="0.0" izz="0.0151074" />
        </inertial>

    </link>
    <link name="ur_arm_forearm_link">
        <visual>
            <origin rpy="1.57079632679 0 -1.57079632679" xyz="0 0 0.007" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5e/visual/forearm.obj" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="1.57079632679 0 -1.57079632679" xyz="0 0 0.007" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5e/collision/forearm.stl" />
            </geometry>
        </collision>
        
<inertial>
            <mass value="2.275" />
            <origin rpy="0 1.57079632679 0" xyz="-0.1961 0.0 0.007" />
            <inertia ixx="0.0312093550996" ixy="0.0" ixz="0.0" iyy="0.0312093550996" iyz="0.0" izz="0.004095" />
        </inertial>

    </link>
    <link name="ur_arm_wrist_1_link">
        <visual>
            <!-- TODO: Move this to a parameter -->
            <origin rpy="1.57079632679 0 0" xyz="0 0 -0.127" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5e/visual/wrist1.obj" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="1.57079632679 0 0" xyz="0 0 -0.127" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5e/collision/wrist1.stl" />
            </geometry>
        </collision>
        
<inertial>
            <mass value="1.219" />
            <origin rpy="0 0 0" xyz="0 0 0" />
            <inertia ixx="0.00255989897604" ixy="0.0" ixz="0.0" iyy="0.00255989897604" iyz="0.0" izz="0.0021942" />
        </inertial>

    </link>
    <link name="ur_arm_wrist_2_link">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 -0.0997" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5e/visual/wrist2.obj" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 -0.0997" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5e/collision/wrist2.stl" />
            </geometry>
        </collision>
        
<inertial>
            <mass value="1.219" />
            <origin rpy="0 0 0" xyz="0 0 0" />
            <inertia ixx="0.00255989897604" ixy="0.0" ixz="0.0" iyy="0.00255989897604" iyz="0.0" izz="0.0021942" />
        </inertial>

    </link>
    <link name="ur_arm_wrist_3_link">
        <visual>
            <origin rpy="1.57079632679 0 0" xyz="0 0 -0.0989" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5e/visual/wrist3.obj" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="1.57079632679 0 0" xyz="0 0 -0.0989" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5e/collision/wrist3.stl" />
            </geometry>
        </collision>
        
<inertial>
            <mass value="0.1879" />
            <origin rpy="0 0 0" xyz="0.0 0.0 -0.0229" />
            <inertia ixx="9.89041005217e-05" ixy="0.0" ixz="0.0" iyy="9.89041005217e-05" iyz="0.0" izz="0.0001321171875" />
        </inertial>

    </link>
    <!-- joints: main serial chain -->
    <joint name="ur_arm_base_link-base_link_inertia" type="fixed">
        <parent link="ur_arm_base_link" />
        <child link="ur_arm_base_link_inertia" />
        <!-- 'base_link' is REP-103 aligned (so X+ forward), while the internal
           frames of the robot/controller have X+ pointing backwards.
           Use the joint between 'base_link' and 'base_link_inertia' (a dummy
           link/frame) to introduce the necessary rotation over Z (of pi rad).
      -->
        <origin rpy="0 0 3.14159265359" xyz="0 0 0" />
    </joint>
    <joint name="ur_arm_shoulder_pan_joint" type="revolute">
        <parent link="ur_arm_base_link_inertia" />
        <child link="ur_arm_shoulder_link" />
        <origin rpy="0 0 0" xyz="0 0 0.1625" />
        <axis xyz="0 0 1" />
        <limit effort="150.0" lower="-6.28318530718" upper="6.28318530718" velocity="3.14159265359" />
        <dynamics damping="0" friction="0" />
    </joint>
    <joint name="ur_arm_shoulder_lift_joint" type="revolute">
        <parent link="ur_arm_shoulder_link" />
        <child link="ur_arm_upper_arm_link" />
        <origin rpy="1.570796327 0 0" xyz="0 0 0" />
        <axis xyz="0 0 1" />
        <limit effort="150.0" lower="-6.28318530718" upper="6.28318530718" velocity="3.14159265359" />
        <dynamics damping="0" friction="0" />
    </joint>
    <joint name="ur_arm_elbow_joint" type="revolute">
        <parent link="ur_arm_upper_arm_link" />
        <child link="ur_arm_forearm_link" />
        <origin rpy="0 0 0" xyz="-0.425 0 0" />
        <axis xyz="0 0 1" />
        <limit effort="150.0" lower="-3.14159265359" upper="3.14159265359" velocity="3.14159265359" />
        <dynamics damping="0" friction="0" />
    </joint>
    <joint name="ur_arm_wrist_1_joint" type="revolute">
        <parent link="ur_arm_forearm_link" />
        <child link="ur_arm_wrist_1_link" />
        <origin rpy="0 0 0" xyz="-0.3922 0 0.1333" />
        <axis xyz="0 0 1" />
        <limit effort="28.0" lower="-6.28318530718" upper="6.28318530718" velocity="3.14159265359" />
        <dynamics damping="0" friction="0" />
    </joint>
    <joint name="ur_arm_wrist_2_joint" type="revolute">
        <parent link="ur_arm_wrist_1_link" />
        <child link="ur_arm_wrist_2_link" />
        <origin rpy="1.570796327 0 0" xyz="0 -0.0997 -2.0448811823e-11" />
        <axis xyz="0 0 1" />
        <limit effort="28.0" lower="-6.28318530718" upper="6.28318530718" velocity="3.14159265359" />
        <dynamics damping="0" friction="0" />
    </joint>
    <joint name="ur_arm_wrist_3_joint" type="revolute">
        <parent link="ur_arm_wrist_2_link" />
        <child link="ur_arm_wrist_3_link" />
        <origin rpy="1.57079632659 3.14159265359 3.14159265359" xyz="0 0.0996 -2.04283014801e-11" />
        <axis xyz="0 0 1" />
        <limit effort="28.0" lower="-6.28318530718" upper="6.28318530718" velocity="3.14159265359" />
        <dynamics damping="0" friction="0" />
    </joint>
    <!-- ROS-Industrial 'base' frame: base_link to UR 'Base' Coordinates transform -->
    <link name="ur_arm_base" />
    <joint name="ur_arm_base_link-base_fixed_joint" type="fixed">
        <!-- Note the rotation over Z of pi radians: as base_link is REP-103
           aligned (ie: has X+ forward, Y+ left and Z+ up), this is needed
           to correctly align 'base' with the 'Base' coordinate system of
           the UR controller.
      -->
        <origin rpy="0 0 3.14159265359" xyz="0 0 0" />
        <parent link="ur_arm_base_link" />
        <child link="ur_arm_base" />
    </joint>
    <!-- ROS-Industrial 'flange' frame: attachment point for EEF models -->
    <link name="ur_arm_flange" />
    <joint name="ur_arm_wrist_3-flange" type="fixed">
        <parent link="ur_arm_wrist_3_link" />
        <child link="ur_arm_flange" />
        <origin rpy="0 -1.57079632679 -1.57079632679" xyz="0 0 0" />
    </joint>
    <!-- ROS-Industrial 'tool0' frame: all-zeros tool frame -->
    <link name="ur_arm_tool0" />
    <joint name="ur_arm_flange-tool0" type="fixed">
        <!-- default toolframe: X+ left, Y+ up, Z+ front -->
        <origin rpy="1.57079632679 0 1.57079632679" xyz="0 0 0" />
        <parent link="ur_arm_flange" />
        <child link="ur_arm_tool0" />
    </joint>
    <!-- This file is a placeholder which is included by default from
       husky.urdf.xacro. If a robot is being customized and requires
       additional URDF, set the HUSKY_URDF_EXTRAS environment variable
       to the full path of the file you would like included. -->
    <transmission name="trans_front_left_wheel">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="front_left_wheel">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="front_left_wheel_motor">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <transmission name="trans_front_right_wheel">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="front_right_wheel">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="front_right_wheel_motor">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <transmission name="trans_rear_left_wheel">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="rear_left_wheel">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="rear_left_wheel_motor">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <transmission name="trans_rear_right_wheel">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="rear_right_wheel">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="rear_right_wheel_motor">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <transmission name="trans_ur_arm_shoulder_pan_joint">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="ur_arm_shoulder_pan_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="ur_arm_shoulder_pan_joint_motor">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <transmission name="trans_ur_arm_shoulder_lift_joint">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="ur_arm_shoulder_lift_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="ur_arm_shoulder_lift_joint_motor">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <transmission name="trans_ur_arm_elbow_joint">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="ur_arm_elbow_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="ur_arm_elbow_joint_motor">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <transmission name="trans_ur_arm_wrist_1_joint">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="ur_arm_wrist_1_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="ur_arm_wrist_1_joint_motor">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <transmission name="trans_ur_arm_wrist_2_joint">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="ur_arm_wrist_2_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="ur_arm_wrist_2_joint_motor">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <transmission name="trans_ur_arm_wrist_3_joint">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="ur_arm_wrist_3_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="ur_arm_wrist_3_joint_motor">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>/</robotNamespace>
        </plugin>
    </gazebo>
</robot>